
ADD_LIBRARY(${PROJECT_NAME}_library
    Events/EventTypes.cpp
    Fault.cpp
    EventsThread.cpp
    MainEventsLoop.cpp
    PingPong/PingPong.cpp
    RealSense/RealSenseD400.cpp
    WebSocket/WebSocketCom.cpp
)

ADD_LIBRARY(${PROJECT_NAME}_library_gpu
    cuda/orb.cu
    cuda/cuda-align.cu
    cuda/cuda_RGB_to_Grayscale.cu
    cuda/gaussian_blur_3x3.cu
    RealSense/SaveRawData.cpp
    SlamGpuPipeline/SlamGpuPipeline.cpp
    cuda_common.cpp
)

file(GLOB_RECURSE VILIB_SOURCES
    external/vilib/*.cpp
    external/vilib/*.cu
)

ADD_LIBRARY(${PROJECT_NAME}_vilib
    ${VILIB_SOURCES}
)

#ds main executable (pthread is used for the GUI thread)
ADD_EXECUTABLE(${PROJECT_NAME} main.cpp)

# TARGET_COMPILE_FEATURES(${PROJECT_NAME} PUBLIC cxx_std_17)
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES POSITION_INDEPENDENT_CODE ON)
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES CUDA_SEPARABLE_COMPILATION ON)
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PRIVATE ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES} ${OpenCV_INCLUDE_DIRS})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} PUBLIC ${PROJECT_NAME}_library ${PROJECT_NAME}_library_gpu Eigen3::Eigen ${realsense2_LIBRARY} ${OpenCV_LIBS} ${CUDART_LIBRARY} -pthread)
# TARGET_LINK_LIBRARIES(${PROJECT_NAME} PUBLIC ${PROJECT_NAME}_library ${PROJECT_NAME}_library_gpu Eigen3::Eigen ${realsense2_LIBRARY} ${OpenCV_LIBS} ${CUDART_LIBRARY} ${CUDADEVRT_LIBRARY} -pthread)

TARGET_LINK_LIBRARIES(${PROJECT_NAME}_library PUBLIC Eigen3::Eigen ${realsense2_LIBRARY} ${OpenCV_LIBS} -pthread)
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME}_library PUBLIC ${OpenCV_INCLUDE_DIRS})
SET_TARGET_PROPERTIES(${PROJECT_NAME}_library PROPERTIES POSITION_INDEPENDENT_CODE ON)
SET_TARGET_PROPERTIES(${PROJECT_NAME}_library PROPERTIES CUDA_SEPARABLE_COMPILATION ON)

# TARGET_LINK_LIBRARIES(${PROJECT_NAME}_library_gpu PUBLIC jetracer_library ${PROJECT_NAME}_vilib Eigen3::Eigen ${realsense2_LIBRARY} ${OpenCV_LIBS} ${CUDART_LIBRARY} ${CUDADEVRT_LIBRARY} -pthread)
TARGET_LINK_LIBRARIES(${PROJECT_NAME}_library_gpu PUBLIC jetracer_library ${PROJECT_NAME}_vilib Eigen3::Eigen ${realsense2_LIBRARY} ${OpenCV_LIBS} ${CUDART_LIBRARY} -pthread)
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME}_library_gpu PUBLIC ${OpenCV_INCLUDE_DIRS})
SET_TARGET_PROPERTIES(${PROJECT_NAME}_library_gpu PROPERTIES POSITION_INDEPENDENT_CODE ON)
SET_TARGET_PROPERTIES(${PROJECT_NAME}_library_gpu PROPERTIES CUDA_SEPARABLE_COMPILATION ON)
SET_TARGET_PROPERTIES(${PROJECT_NAME}_library_gpu PROPERTIES CUDA_ARCHITECTURES 52)
SET_SOURCE_FILES_PROPERTIES(${PROJECT_NAME}_library_gpu PROPERTIES LANGUAGE CUDA)

# TARGET_LINK_LIBRARIES(${PROJECT_NAME}_vilib PUBLIC Eigen3::Eigen ${OpenCV_LIBS} ${CUDART_LIBRARY} ${CUDADEVRT_LIBRARY} -pthread)
TARGET_LINK_LIBRARIES(${PROJECT_NAME}_vilib PUBLIC Eigen3::Eigen ${OpenCV_LIBS} ${CUDART_LIBRARY} -pthread)
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME}_vilib PUBLIC ${OpenCV_INCLUDE_DIRS})
SET_TARGET_PROPERTIES(${PROJECT_NAME}_vilib PROPERTIES POSITION_INDEPENDENT_CODE ON)
SET_TARGET_PROPERTIES(${PROJECT_NAME}_vilib PROPERTIES CUDA_SEPARABLE_COMPILATION ON)
SET_TARGET_PROPERTIES(${PROJECT_NAME}_vilib PROPERTIES CUDA_ARCHITECTURES 52)
SET_SOURCE_FILES_PROPERTIES(${PROJECT_NAME}_vilib PROPERTIES LANGUAGE CUDA)


message(STATUS "CUDA_cudadevrt_LIBRARY ${CUDA_cudadevrt_LIBRARY}")
message(STATUS "CUDADEVRT_LIBRARY ${CUDADEVRT_LIBRARY}")


INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/external" ${OpenCV_INCLUDE_DIRS} "/root/cuda-samples/Common")
