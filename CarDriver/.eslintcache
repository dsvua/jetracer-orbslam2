[{"/home/serhiy/github/jetracer-orbslam2/CarDriver/src/index.js":"1","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/App.js":"2","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/reportWebVitals.js":"3","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/components/connection.jsx":"4","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/message/index.js":"5","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/state/network/index.js":"6","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/message/parseMessage.js":"7","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/state/network/selectors.js":"8","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/state/network/atoms.js":"9","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/hooks/useWebsockets.js":"10","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/state/video/index.js":"11","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/state/video/selectors.js":"12","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/state/video/atoms.js":"13","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/components/videofeed.jsx":"14","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/state/slam/index.js":"15","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/state/slam/selectors.js":"16","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/state/slam/atoms.js":"17"},{"size":581,"mtime":1612056821621,"results":"18","hashOfConfig":"19"},{"size":1179,"mtime":1615060022882,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1611851068822,"results":"21","hashOfConfig":"19"},{"size":1963,"mtime":1612323101547,"results":"22","hashOfConfig":"19"},{"size":31,"mtime":1612054968878,"results":"23","hashOfConfig":"19"},{"size":53,"mtime":1612052472494,"results":"24","hashOfConfig":"19"},{"size":711,"mtime":1612321187157,"results":"25","hashOfConfig":"19"},{"size":228,"mtime":1612052441766,"results":"26","hashOfConfig":"19"},{"size":385,"mtime":1615746307405,"results":"27","hashOfConfig":"19"},{"size":2491,"mtime":1615746411737,"results":"28","hashOfConfig":"19"},{"size":53,"mtime":1612320795584,"results":"29","hashOfConfig":"19"},{"size":222,"mtime":1612322761666,"results":"30","hashOfConfig":"19"},{"size":294,"mtime":1612327450739,"results":"31","hashOfConfig":"19"},{"size":1516,"mtime":1616122413880,"results":"32","hashOfConfig":"19"},{"size":53,"mtime":1612498166267,"results":"33","hashOfConfig":"19"},{"size":0,"mtime":1612498150379,"results":"34","hashOfConfig":"19"},{"size":134,"mtime":1612499477423,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"10jqpiy",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"77"},"/home/serhiy/github/jetracer-orbslam2/CarDriver/src/index.js",[],["83","84"],"/home/serhiy/github/jetracer-orbslam2/CarDriver/src/App.js",["85"],"import './App.css';\nimport { WsConnection } from './components/connection';\nimport React, {useState, useEffect} from \"react\";\nimport useWebsocket from \"./hooks/useWebsockets\";\nimport { VideoFeed } from \"./components/videofeed\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n      width,\n      height\n  };\n}\n\nconst App = () => {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useWebsocket();\n\n  function handleResize() {\n    // console.log(\"before resize\", getWindowDimensions());\n    setWindowDimensions(getWindowDimensions());\n    // console.log(\"after resize\", getWindowDimensions());\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return (\n      <div className=\"container-fluid d-flex flex-column min-vh-100 h-100 w-100\">\n        <div className=\"row align-items-start w-100\">\n          {/* <div className=\"col\"> */}\n            <VideoFeed />        \n          {/* </div> */}\n        </div>\n        <WsConnection />        \n      </div>\n  );\n}\n\nexport default App;\n","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/reportWebVitals.js",[],["86","87"],"/home/serhiy/github/jetracer-orbslam2/CarDriver/src/components/connection.jsx",["88","89"],"import React, { useState, useEffect } from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { connectionStateUrl, connectionStateIsConnected, connectionStateWs } from '../state/network'\n\nexport const WsConnection = () => {\n\n    const [connUrl, setConnUrl] = useRecoilState(connectionStateUrl);\n    const isConnected = useRecoilValue(connectionStateIsConnected);\n    const [ws, setWs] = useRecoilState(connectionStateWs);\n\n    const handleUrlChange = (e) => {\n        setConnUrl(e.target.value);\n    };\n\n    const handleConnect = (e) => {\n\n        if(!isConnected) {\n            setWs(new WebSocket(connUrl));\n        } else {\n            ws.close();\n        };\n    };\n\n    const handleSendTextMessage = (e) => {\n        ws.send('{\"message\": \"test message\"}');\n    };\n\n    return (\n        // <div>\n        //     <div className=\"container w-100\">\n                <div className=\"row justify-content-center align-items-end\">\n                    <div className=\"col justify-content-center\">\n                        <input type=\"text\" value={connUrl} onChange={handleUrlChange}>\n                        </input>\n                    </div>\n                    <div className=\"col justify-content-center\">\n                        <button onClick={handleConnect}\n                        type=\"button\"\n                        className={isConnected ? \"btn btn-warning\" : \"btn btn-success\"}> \n                            {isConnected ? \"Disconnect\" : \"Connect\"}\n                        </button>\n                    </div>\n                    <div className=\"col justify-content-center\">\n                        <button disabled={!isConnected} onClick={handleSendTextMessage}\n                        type=\"button\"\n                        className=\"btn btn-secondary\"> \n                            Send Text message\n                        </button>\n                    </div>\n                </div>\n        //     </div>\n        // </div>\n    )\n}","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/message/index.js",[],["90","91"],"/home/serhiy/github/jetracer-orbslam2/CarDriver/src/state/network/index.js",[],"/home/serhiy/github/jetracer-orbslam2/CarDriver/src/message/parseMessage.js",["92"],"import BSON from 'bson';\nimport { useRecoilState } from 'recoil';\nimport { videoImage as VideoImage } from '../state/video'\n\nexport const useParseMessage = (message) => {\n\n    const [videoImage, setVideoImage] = useRecoilState(VideoImage);\n\n\n    try {\n        const reader = new FileReader()\n        reader.onload = function () {\n          const msgarray = new Uint8Array(this.result)\n          const msg = BSON.deserialize(msgarray)\n          setVideoImage(msg.data);\n          console.log(`Received message`);\n          console.log(msg.timestamp);\n          };\n\n        reader.readAsArrayBuffer(message.data);\n\n      }\n      catch (e) {\n        console.log(`Failed to deserialise websocket message`)\n      }\n}","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/state/network/selectors.js",["93","94"],"import { selectorFamily, selector } from \"recoil\";\nimport { connectionState } from \"./atoms\";\n\n\nexport const connectionConnectSelector = selector({\n    key: 'connection-connect',\n    set: ({set, get}, url) => {\n        \n    }\n})","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/state/network/atoms.js",["95"],"import { atomFamily, atom } from \"recoil\";\n\nexport const connectionStateIsConnected = atom({\n    key: 'connection-state-is-connected-atom',\n    default: false,\n});\n\nexport const connectionStateWs = atom({\n    key: 'connection-state-ws-atom',\n    default: null,\n});\n\nexport const connectionStateUrl = atom({\n    key: 'connection-state-url-atom',\n    default: 'ws://localhost:9002',\n});\n","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/hooks/useWebsockets.js",["96"],"import { useEffect } from 'react';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport { connectionStateIsConnected, connectionStateWs } from '../state/network'\nimport { videoImage, videoImageParams } from '../state/video'\nimport BSON from 'bson';\n\nexport const useWebsocket = () => {\n\n    const setIsConnected = useSetRecoilState(connectionStateIsConnected);\n    const setVideoImageParams = useSetRecoilState(videoImageParams);\n    const setNewVideoImage = useSetRecoilState(videoImage);\n    const [ws, setWs] = useRecoilState(connectionStateWs);\n\n    useEffect( () => {\n        if(ws) {\n            ws.binaryType = \"blob\";\n\n            ws.onopen = (e) => {\n                setIsConnected(true);\n                console.log(\"WebSocket is connected.\");\n            };\n\n            ws.onclose = (e) => {\n                setIsConnected(false);\n                console.log(\"WebSocket is disconnected.\");\n                setWs(null);\n            };\n\n            ws.onmessage = (message) => {\n                const reader = new FileReader()\n                reader.onload = function () {\n                    const msgarray = new Uint8Array(this.result)\n                    const msg = BSON.deserialize(msgarray)\n                    // console.log(`Received message`);\n                    // console.log(msg.timestamp);\n\n                    let imageParams = {};\n                    imageParams.height = msg.height;\n                    imageParams.width = msg.width;\n                    imageParams.channels = msg.channels;\n\n                    // console.log(\"image pixel:\", msg);\n                    setNewVideoImage({\n                        image: new Uint8Array(msg.image.buffer),\n                        x: Uint8Array.from(msg.keypoints_x.buffer),\n                        y: Uint8Array.from(msg.keypoints_y.buffer)\n                    });\n                    setVideoImageParams(imageParams);\n                    // setNewSlamKeyPoints({x: msg.keypoints_x.buffer, y: msg.keypoints_y.buffer})\n                };\n                try {\n                    reader.readAsArrayBuffer(message.data);\n                }\n                catch (e) {\n                    // console.log(`Failed to deserialise websocket message`);\n                    console.log(e);\n                }\n            };\n\n            ws.onerror = (err) => {\n                console.error(\"WebSocket error observed:\", err);\n            };\n        };\n\n    },[ws]);\n\n    return null\n}\n\nexport default useWebsocket;","/home/serhiy/github/jetracer-orbslam2/CarDriver/src/state/video/index.js",[],"/home/serhiy/github/jetracer-orbslam2/CarDriver/src/state/video/selectors.js",[],"/home/serhiy/github/jetracer-orbslam2/CarDriver/src/state/video/atoms.js",["97"],"import { atomFamily, atom } from \"recoil\";\n\nexport const videoImage = atom({\n    key: 'video-image-atom',\n    default: null,\n});\n\nexport const videoImageParams = atom({\n    key: 'video-image-params-atom',\n    default: {\n        height: 480,\n        width: 848,\n        channels: 1,\n    },\n});\n\n",["98","99"],"/home/serhiy/github/jetracer-orbslam2/CarDriver/src/components/videofeed.jsx",["100","101","102","103","104","105"],"/home/serhiy/github/jetracer-orbslam2/CarDriver/src/state/slam/index.js",[],["106","107"],"/home/serhiy/github/jetracer-orbslam2/CarDriver/src/state/slam/selectors.js",[],"/home/serhiy/github/jetracer-orbslam2/CarDriver/src/state/slam/atoms.js",["108"],"import { atomFamily, atom } from \"recoil\";\n\nexport const slamKeypoints = atom({\n    key: 'slam-keypoints-atom',\n    default: {},\n});\n\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":16,"column":10,"nodeType":"115","messageId":"116","endLine":16,"endColumn":26},{"ruleId":"109","replacedBy":"117"},{"ruleId":"111","replacedBy":"118"},{"ruleId":"113","severity":1,"message":"119","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"120","line":1,"column":27,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"109","replacedBy":"121"},{"ruleId":"111","replacedBy":"122"},{"ruleId":"113","severity":1,"message":"123","line":7,"column":12,"nodeType":"115","messageId":"116","endLine":7,"endColumn":22},{"ruleId":"113","severity":1,"message":"124","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":24},{"ruleId":"113","severity":1,"message":"125","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":25},{"ruleId":"113","severity":1,"message":"126","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":20},{"ruleId":"127","severity":1,"message":"128","line":65,"column":7,"nodeType":"129","endLine":65,"endColumn":11,"suggestions":"130"},{"ruleId":"113","severity":1,"message":"126","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":20},{"ruleId":"109","replacedBy":"131"},{"ruleId":"111","replacedBy":"132"},{"ruleId":"113","severity":1,"message":"119","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"133","line":2,"column":26,"nodeType":"115","messageId":"116","endLine":2,"endColumn":40},{"ruleId":"113","severity":1,"message":"134","line":11,"column":11,"nodeType":"115","messageId":"116","endLine":11,"endColumn":31},{"ruleId":"113","severity":1,"message":"135","line":15,"column":11,"nodeType":"115","messageId":"116","endLine":15,"endColumn":20},{"ruleId":"127","severity":1,"message":"136","line":38,"column":8,"nodeType":"129","endLine":38,"endColumn":24,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":42,"column":13,"nodeType":"140","endLine":42,"endColumn":47},{"ruleId":"109","replacedBy":"141"},{"ruleId":"111","replacedBy":"142"},{"ruleId":"113","severity":1,"message":"126","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":20},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'windowDimensions' is assigned a value but never used.","Identifier","unusedVar",["143"],["144"],"'useState' is defined but never used.","'useEffect' is defined but never used.",["143"],["144"],"'videoImage' is assigned a value but never used.","'selectorFamily' is defined but never used.","'connectionState' is defined but never used.","'atomFamily' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setIsConnected', 'setNewVideoImage', 'setVideoImageParams', and 'setWs'. Either include them or remove the dependency array.","ArrayExpression",["145"],["143"],["144"],"'useRecoilState' is defined but never used.","'currVideoImageParams' is assigned a value but never used.","'canvasRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isConnected'. Either include it or remove the dependency array.",["146"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["143"],["144"],"no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [setIsConnected, setNewVideoImage, setVideoImageParams, setWs, ws]",{"range":"151","text":"152"},"Update the dependencies array to be: [currVideoImage, isConnected]",{"range":"153","text":"154"},[2436,2440],"[setIsConnected, setNewVideoImage, setVideoImageParams, setWs, ws]",[1400,1416],"[currVideoImage, isConnected]"]